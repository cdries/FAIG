% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allocate.R
\encoding{UTF-8}
\name{allocate}
\alias{allocate}
\title{Allocate indivisible goods}
\usage{
allocate(vals, algo = "mincov", obj = "soc", alloc0 = "random",
  maxiter = 1e+05, eps = 1e-06, target = 0)
}
\arguments{
\item{vals}{valuation matrix, each row represents the value for this agent for each of the items (columns)}

\item{algo}{algorithm, one of (mincov, mincovtarget, localtrades, randselect)}

\item{obj}{objective value to minimize, one of (soc, maxenvy); only relevant for algorithms 
localtrades and randselect}

\item{alloc0}{initial allocation, either a vector of length n_items containing the
index of the person to which each item belongs, or 'random', in which case we generate a random
initial allocation; not relevant when algo='randselect"}

\item{maxiter}{maximum number of iterations, default 1e5}

\item{eps}{absolute convergence criterion, default 1e-6}

\item{target}{target value or vector (length n_persons), only relevant for mincovtarget}
}
\description{
wrapper function to allocate indivisible goods
}
\details{
There are currently four algorithms implemented: 1. randselect 2. localtrades 3. mincov and
4. mincovtarget. For algorithms 1 and 2, there is the choice to use as objective function
either maxenvy (to be minimized) or social inequality (to be minimized). Algorithms 3 and 4
use the social inequality algorithm.
Control parameters include 'maxiter' for maximum number of iterations (default 1e5) and
'eps' the tolerance to stop when V < eps (default 1e-6).
}
\references{
Cornilly, D., Puccetti, G., RÃ¼schendorf, L., & Vanduffel, S. (2020). 
New algorithms for fair allocation of indivisible goods with minimum inequality or minimum envy
criteria.
}
\author{
Dries Cornilly
}
\concept{allocate}
